name: Westover_Church_Main

env:
  AZURE_WEBAPP_NAME: rameyroad-westoverchurch-eus-con01 # the web app name
  AZURE_RESOURCE_GROUP: RameyRoad-Global # the web app name

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@v3

      # - name: Douwgrade Az.Accounts workaround
      #   uses: Azure/powershell@v2
      #   with:
      #     azPSVersion: latest
      #     inlineScript: |
      #       Install-Module -Name Az.Accounts -RequiredVersion 2.19.0 -Force

      # - name: Login via Azure CLI
      #   uses: azure/login@v2
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}
      #     enable-AzPSSession: true

      - name: Login via Azure CLI
        uses: azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
          enable-AzPSSession: true

      - name: Build and push image
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - run: |
          docker build web-spa/. -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/westoverchurch-main-web:main-${{ github.run_id }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/westoverchurch-main-web:main-${{ github.run_id }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: "${{ secrets.REGISTRY_LOGIN_SERVER }}/westoverchurch-main-web:main-${{ github.run_id }}"

      - name: Run Azure PowerShell script
        uses: azure/powershell@v1
        with:
          inlineScript: |
            az webapp restart --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }}
          azPSVersion: "latest"
